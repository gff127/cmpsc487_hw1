#the gui for the program
#most of this class was generated by an editor tool except for the search_button_cliked() method

from PyQt5 import QtCore, QtGui, QtWidgets
import db_worker
import sys

class Ui_MainWindow(object):
    def __init__(self):
        self.db = db_worker.db_worker()
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(707, 410)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(530, 300, 75, 24))
        self.pushButton.setObjectName("pushButton")
        self.time_check = QtWidgets.QCheckBox(self.centralwidget)
        self.time_check.setGeometry(QtCore.QRect(490, 210, 141, 20))
        self.time_check.setObjectName("time_check")
        self.id_check = QtWidgets.QCheckBox(self.centralwidget)
        self.id_check.setGeometry(QtCore.QRect(490, 70, 100, 20)) #this was 70
        self.id_check.setObjectName("id_check")
        self.date_check = QtWidgets.QCheckBox(self.centralwidget)
        self.date_check.setGeometry(QtCore.QRect(490, 140, 101, 20))
        self.date_check.setObjectName("date_check")
        self.results = QtWidgets.QListWidget(self.centralwidget)
        self.results.setGeometry(QtCore.QRect(60, 70, 256, 192))
        self.results.setObjectName("results")
        self.date = QtWidgets.QDateEdit(self.centralwidget)
        self.date.setGeometry(QtCore.QRect(490, 170, 110, 22))
        self.date.setObjectName("date")
        self.time_start = QtWidgets.QTimeEdit(self.centralwidget)
        self.time_start.setGeometry(QtCore.QRect(490, 251, 81, 21))
        self.time_start.setObjectName("time_start")
        self.time_end = QtWidgets.QTimeEdit(self.centralwidget)
        self.time_end.setGeometry(QtCore.QRect(580, 252, 71, 20))
        self.time_end.setObjectName("time_end")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(60, 30, 171, 41))
        self.label.setObjectName("label")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit.setGeometry(QtCore.QRect(490, 90, 151, 31))
        self.plainTextEdit.setLineWrapMode(QtWidgets.QPlainTextEdit.WidgetWidth)
        self.plainTextEdit.setMaximumBlockCount(0)
        self.plainTextEdit.setObjectName("plainTextEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 707, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.pushButton.clicked.connect(self.search_button_clicked)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    #logic that occurs when the search button is clicked
    def search_button_clicked(self):
        #parameters needed for the SQL query, are defaulted to none.
        start_min, end_min, start_hour, end_hour, s_id, date = None, None, None, None, None, None
        
        #if the relevant checkbox is checked, read the info from the GUI to the variables
        
        if self.time_check.checkState(): #filter by time range
            start_min = self.time_start.time().minute()
            end_min = self.time_end.time().minute()
            start_hour = self.time_start.time().hour()
            end_hour = self.time_end.time().hour()
        if self.id_check.checkState():  #filter by id
            s_id = self.plainTextEdit.toPlainText()
            if s_id == "":
                s_id = None
        if self.date_check.checkState(): #filter by date
            date = self.date.date().toString("yyyy-MM-dd")
        
        #get the results of the search
        search_results = self.db.search_db(s_id, date, start_hour, start_min, end_hour, end_min)

        #output the results on the GUI
        self.results.clear()
        if search_results == []:
            self.results.addItem("No results found.")
        else:
            self.results.addItem("Student ID \t Timestamp") #the header of the results
        for result in search_results:
            res_string = str(result[0]) + "\t" + str(result[1])
            self.results.addItem(res_string)
        
        
        
        
    
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Search"))
        self.time_check.setText(_translate("MainWindow", "Filter by Time Range"))
        self.id_check.setText(_translate("MainWindow", "Filter by ID"))
        self.date_check.setText(_translate("MainWindow", "Filter by Date"))
        self.label.setText(_translate("MainWindow", "Records"))



